services:
  backend:
    build:
      context: ./backend
    container_name: safar_backend
    env_file: .env
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    networks:
      - safarnetwork
    volumes:
      - ./static:/app/static
      - ./backend/safar_firebase_credentials.json:/app/safar_firebase_credentials.json:ro,z
      - ./staticfiles:/app/staticfiles:z
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: ./backend
      dockerfile: ../infrastructure/celery/celery-flower/Dockerfile
    container_name: safar_celery
    env_file: .env
    depends_on:
      - db
      - redis
      - backend
    networks:
      - safarnetwork
    command: ["celery", "-A", "core", "worker", "--loglevel=info"]

  celery-flower:
    build:
      context: ./backend
      dockerfile: ../infrastructure/celery/celery-flower/Dockerfile
    container_name: safar_celery_flower
    env_file: .env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - backend
      - celery
    networks:
      - safarnetwork
    command: ["celery", "-A", "core", "flower", "--port=5555", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]

  redis:
    image: redis:latest
    container_name: safar_redis
    networks:
      - safarnetwork
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgis/postgis:latest
    container_name: safar_postgres
    environment:
      PGDATABASE: ${PGDATABASE}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
    ports:
      - "5432:5432"
    networks:
      - safarnetwork
    volumes:
      - postgis_data:/var/lib/postgresql/data:z

   
networks:
  safarnetwork:
    driver: bridge

volumes:
  postgis_data:
  redis_data:
